
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Соревнования = ДанныеЗаполнения.Ссылка;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если Партии.Количество() > 0 Тогда 
		//пишем в базу
		//шапка параметрами, ТЧ сворачиваем в строку
		шапка = Новый Структура;
		шапка.Вставить("Соперник", Соперник);
		шапка.Вставить("РейтингСоперника", РейтингСоперника);
		шапка.Вставить("Результат", Результат);
		шапка.Вставить("Счет", Счет);
		шапка.Вставить("Пользователь", СТРОКА(Константы.ГУИД.Получить()));
		
		//ТЧ
		ср = Новый СериализаторXDTO(ФабрикаXDTO);
		об = ср.ЗаписатьXDTO(ПолучитьТаблицу());
		зп = Новый ЗаписьXML;
		зп.УстановитьСтроку();
		ФабрикаXDTO.ЗаписатьXML(зп, об);
		стрТаб = зп.Закрыть();
		
		//шапку в строку
		обШапка = ср.ЗаписатьXDTO(шапка);
		зп = Новый ЗаписьXML;
		зп.УстановитьСтроку();
		ФабрикаXDTO.ЗаписатьXML(зп, обШапка);
		стрШпк = зп.Закрыть();
		
		срв = Соревнования.Ссылка.УИД;
		
		сервис = WSСсылки.WSTenis.СоздатьWSПрокси("WSTenis", "WSTenis", "WSTenisSoap12");
		Если НЕ ЗначениеЗаполнено(УИД) Тогда 
			Попытка
				УИД = Новый УникальныйИдентификатор(сервис.AddGame(СТРОКА(срв), стрШпк, стрТаб));
			Исключение
				мз = РегистрыСведений.Выгрузка.СоздатьМенеджерЗаписи();
				мз.ОбъектВыгрузки = Ссылка;
				мз.Записать();
			КонецПопытки;
		Иначе
			Попытка
				рез = сервис.UpdateGame(СТРОКА(срв), стрШпк, стрТаб, СТРОКА(УИД));
			Исключение
				мз = РегистрыСведений.Выгрузка.СоздатьМенеджерЗаписи();
				мз.ОбъектВыгрузки = Ссылка;
				мз.Записать();
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьТаблицу()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИграПартии.СчетИгрок КАК СчетИгрок,
	|	ИграПартии.СчетСоперник КАК СчетСоперник,
	|	ИграПартии.Итог КАК Итог
	|ИЗ
	|	Документ.Игра.Партии КАК ИграПартии
	|ГДЕ
	|	ИграПартии.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции
/////////////////////////////////////////////////////////
//Функция AddGame(CmptUID, CmptStruct, CmptTable)
//	ср = Новый СериализаторXDTO(ФабрикаXDTO);
//	чт = Новый ЧтениеXML;
//	чт.УстановитьСтроку(CmptStruct);		
//	шапка = ср.ПрочитатьXML(чт);
//	
//	срв = Справочники.Соревнование.ПолучитьСсылку(Новый УникальныйИдентификатор(CmptUID));
//	игр = Документы.Игра.СоздатьДокумент();
//	игр.Дата = ТекущаяДата();
//	игр.Соревнования = срв;
//	
//	//обходим структуру
//	знчСтр = Неопределено;
//	Если шапка.Свойство("Соперник", знчСтр) Тогда
//		игр.Соперник = знчСтр;
//	КонецЕсли;
//	Если шапка.Свойство("РейтингСоперника", знчСтр) Тогда
//		игр.РейтингСоперника = знчСтр;
//	КонецЕсли;
//	Если шапка.Свойство("Результат", знчСтр) Тогда
//		игр.Результат = знчСтр;
//	КонецЕсли;
//	Если шапка.Свойство("Счет", знчСтр) Тогда
//		игр.Счет = знчСтр;
//	КонецЕсли;
//	Если шапка.Свойство("Пользователь", знчСтр) Тогда
//		игр.Пользователь = Новый УникальныйИдентификатор(знчСтр);
//	КонецЕсли;
//	
//	игр.Записать(РежимЗаписиДокумента.Запись);
//	Возврат СТРОКА(игр.Ссылка.УникальныйИдентификатор());
//КонецФункции
